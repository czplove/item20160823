<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Ember ZigBee RF4CE API Reference: For the EM35x SoC Platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Ember ZigBee RF4CE API Reference: For the EM35x SoC Platform
   &#160;<span id="projectnumber">EmberZNet 5.7.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.2 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__cbh__alone.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">Standalone</div>  </div>
<div class="ingroups"><a class="el" href="group__cust__boot__hal.htm">Custom Bootloader HAL</a></div></div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Required Custom Functions</h2></td></tr>
<tr class="memitem:gaecc98bfd2158367195157e16ef58d317"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cbh__alone.htm#gaecc98bfd2158367195157e16ef58d317">bootloaderMenu</a> (void)</td></tr>
<tr class="separator:gaecc98bfd2158367195157e16ef58d317"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Available Bootloader Library Functions</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrp1f7a0ecef9d5ec77f3a1a996a2d8bfc7"></a> Functions implemented by the bootloader library that may be used by custom functions. </p>
</td></tr>
<tr class="memitem:ga9c3a3b011dce6899f27a61da6350d02a"><td class="memItemLeft" align="right" valign="top">BL_Status&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cbh__alone.htm#ga9c3a3b011dce6899f27a61da6350d02a">receiveImage</a> (uint8_t commState)</td></tr>
<tr class="separator:ga9c3a3b011dce6899f27a61da6350d02a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6aa0ac0a0ecb514778fc4282938458e9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cbh__alone.htm#ga6aa0ac0a0ecb514778fc4282938458e9">checkDebugMenuOption</a> (uint8_t ch)</td></tr>
<tr class="separator:ga6aa0ac0a0ecb514778fc4282938458e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga006f88b148a0008a3cb3f6b047d1dbcd"><td class="memItemLeft" align="right" valign="top">BL_Status&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cbh__alone.htm#ga006f88b148a0008a3cb3f6b047d1dbcd">initOtaState</a> (void)</td></tr>
<tr class="separator:ga006f88b148a0008a3cb3f6b047d1dbcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae100916a4127140fe57a4e9a52d5aeee"><td class="memItemLeft" align="right" valign="top">BL_Status&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cbh__alone.htm#gae100916a4127140fe57a4e9a52d5aeee">checkOtaStart</a> (void)</td></tr>
<tr class="separator:gae100916a4127140fe57a4e9a52d5aeee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga30aec9f161c3ef336a1240f55feea233"><td class="memItemLeft" align="right" valign="top">BL_Status&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cbh__alone.htm#ga30aec9f161c3ef336a1240f55feea233">receiveOtaImage</a> (void)</td></tr>
<tr class="separator:ga30aec9f161c3ef336a1240f55feea233"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga73a6700238e854cdbe2f9aa8ce18c83a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cbh__alone.htm#ga73a6700238e854cdbe2f9aa8ce18c83a">paIsPresent</a> (void)</td></tr>
<tr class="separator:ga73a6700238e854cdbe2f9aa8ce18c83a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga175dee3d5c205ed1bfc5db9822eaee4a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__cbh__alone.htm#ga175dee3d5c205ed1bfc5db9822eaee4a">halCheckIntegrity</a> (void)</td></tr>
<tr class="separator:ga175dee3d5c205ed1bfc5db9822eaee4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>EM35x standalone bootloader public definitions. </p>
<p>See <a class="el" href="standalone-bootloader_8h.htm">standalone-bootloader.h</a> for source code. </p>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="gaecc98bfd2158367195157e16ef58d317"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void bootloaderMenu </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function must be implemented, providing a bootloader menu. </p>

</div>
</div>
<a class="anchor" id="ga9c3a3b011dce6899f27a61da6350d02a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BL_Status receiveImage </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>commState</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Puts the bootloader into a mode where it will receive an image. commState indicates whether the image is received via serial (COMM_SERIAL) or over the air (COMM_RADIO) </p>

</div>
</div>
<a class="anchor" id="ga6aa0ac0a0ecb514778fc4282938458e9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool checkDebugMenuOption </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>ch</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A hook to the bootloader library for it to check for extra menu options. Only used for ember internal debug builds, not normally needed. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the option was handled, false if not. </dd></dl>

</div>
</div>
<a class="anchor" id="ga006f88b148a0008a3cb3f6b047d1dbcd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BL_Status initOtaState </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize OTA Bootloader state. </p>
<dl class="section note"><dt>Note</dt><dd>OTA support hooks are subject to change!</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>::BL_Status of the success of the function. </dd></dl>

</div>
</div>
<a class="anchor" id="gae100916a4127140fe57a4e9a52d5aeee"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BL_Status checkOtaStart </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check to see if the bootloader has detected an OTA upload start. </p>
<dl class="section note"><dt>Note</dt><dd>OTA support hooks are subject to change!</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>::BL_Status of the success of the function. </dd></dl>

</div>
</div>
<a class="anchor" id="ga30aec9f161c3ef336a1240f55feea233"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">BL_Status receiveOtaImage </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Puts the bootloader into a mode where it will receive an image over the air. The function <a class="el" href="group__cbh__alone.htm#gae100916a4127140fe57a4e9a52d5aeee" title="Check to see if the bootloader has detected an OTA upload start.">checkOtaStart()</a> should have been called first and it should have returned with a status of ::BL_SUCCESS before calling this function. </p>
<dl class="section note"><dt>Note</dt><dd>OTA support hooks are subject to change!</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>::BL_Status of the success of the function. </dd></dl>

</div>
</div>
<a class="anchor" id="ga73a6700238e854cdbe2f9aa8ce18c83a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool paIsPresent </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Uses the information in the PHY_CONFIG token to determine if a power amplifier is present in the node design. </p>
<dl class="section note"><dt>Note</dt><dd>This function must not be called before emBootloaderRadioBoot().</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>true if a power amplifier is present, false otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="ga175dee3d5c205ed1bfc5db9822eaee4a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool halCheckIntegrity </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Validate application integrity by running AES-MMO hash and comparing to AAT. </p>
<dl class="section return"><dt>Returns</dt><dd>false if fails integrity check, true if pass </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
Ember ZigBee RF4CE API Reference: For the EM35x SoC Platform. EmberZNet 5.7.0.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
